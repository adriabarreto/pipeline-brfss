name: Upload CSVs to Release

on:
  workflow_dispatch:
  push:
    branches:
      - main  # ajuste conforme sua branch principal

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repositório
        uses: actions/checkout@v3

      - name: Instalar Python e Poetry
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # Ajuste conforme sua versão suportada

      - name: Instalar Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Instalar dependências com Poetry
        run: poetry install

      - name: Verificar existência dos CSVs limpos
        id: verificar_csv
        run: |
          if ls data/cleaned/*.csv 1> /dev/null 2>&1; then
            echo "csv_existe=true" >> $GITHUB_OUTPUT
          else
            echo "csv_existe=false" >> $GITHUB_OUTPUT
          fi

      - name: Rodar a pipeline (se CSVs não existirem)
        if: steps.verificar_csv.outputs.csv_existe == 'false'
        run: |
          poetry run python src/pipeline_dados_brfss/pipeline_brfss.py

      - name: Verificar novamente os CSVs limpos
        id: verificar_csv_apos
        run: |
          if ls data/cleaned/*.csv 1> /dev/null 2>&1; then
            echo "csv_existe_apos=true" >> $GITHUB_OUTPUT
          else
            echo "csv_existe_apos=false" >> $GITHUB_OUTPUT
          fi

      - name: Criar release e enviar CSVs (se existirem)
        if: steps.verificar_csv_apos.outputs.csv_existe_apos == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: release-${{ github.run_number }}-${{ github.sha }}
          name: Release ${{ github.run_number }}
          body: Arquivos CSV limpos gerados pela pipeline.
          files: |
            data/cleaned/*.csv
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
